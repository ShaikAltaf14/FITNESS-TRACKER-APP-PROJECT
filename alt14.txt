
altaf@DESKTOP-0PC2PD8:~$ touch file8.sh
altaf@DESKTOP-0PC2PD8:~$ nano file8.sh
altaf@DESKTOP-0PC2PD8:~$ bash file8.sh
Enter a string:
1
Reversed string: 1
altaf@DESKTOP-0PC2PD8:~$

CODE :
echo "Enter a string:"
read input_string
reversed_string=$(echo "$input_string" | rev)
echo "Reversed string: $reversed_string"


altaf@DESKTOP-0PC2PD8:~$ touch file9.sh
altaf@DESKTOP-0PC2PD8:~$ nano file9.sh
altaf@DESKTOP-0PC2PD8:~$ bash file9.sh
Enter the file name:
9
File '9' does not exist.

CODE:
echo "Enter the file name:"
read file_name


if [ -f "$file_name" ]; then

    file_size=$(stat --format="%s" "$file_name")
    echo "The size of the file '$file_name' is: $file_size bytes"
else
    echo "File '$file_name' does not exist."
fi


altaf@DESKTOP-0PC2PD8:~$ touch file10.sh
altaf@DESKTOP-0PC2PD8:~$ bash file10.sh
Enter a number:
2
Prime numbers up to 2 are:
2

CODE:
#!/bin/bash

# Read the number up to which primes are to be found
echo "Enter a number:"
read limit

# Function to check if a number is prime
is_prime() {
    num=$1
    if [ $num -le 1 ]; then
        return 1  # Not prime
    fi

    # Check divisibility from 2 to the square root of num
    for ((i=2; i*i<=num; i++)); do
        if ((num % i == 0)); then
            return 1  # Not prime
        fi
    done

    return 0  # Prime
}

echo "Prime numbers up to $limit are:"

# Loop through all numbers from 2 to limit and check if they are prime
for ((i=2; i<=limit; i++)); do
    is_prime $i
    if [ $? -eq 0 ]; then
        echo $i
    fi
done
